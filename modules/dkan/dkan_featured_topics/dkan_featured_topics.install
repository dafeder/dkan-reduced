<?php

/**
 * Install file for DKAN Topics.
 */

/**
 * Implements hook_install().
 */
function dkan_featured_topics_install() {
  // Add menu.
  dkan_featured_topics_add_menu();

  $feature = features_get_features('dkan_featured_topics');
  $components = array_keys($feature->info['features']);
  features_revert(array('dkan_featured_topics' => $components));

  // Add the field_topic field instance to the dataset, story and dashboard bundles.
  $content_types = array('dataset', 'dkan_data_story', 'data_dashboard');
  $available_types = array_keys(node_type_get_types());

  foreach (array_intersect($content_types, $available_types) as $content_type) {
    if (!field_info_instance('node', 'field_topic', $content_type)) {

      // Exported field_instance: 'node-dataset-field_topic'
      $instance = array(
        'bundle' => $content_type,
        'default_value' => NULL,
        'deleted' => 0,
        'description' => '',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'module' => 'taxonomy',
            'settings' => array(),
            'type' => 'taxonomy_term_reference_link',
            'weight' => 21,
          ),
          'search_result' => array(
            'label' => 'above',
            'module' => 'taxonomy',
            'settings' => array(),
            'type' => 'taxonomy_term_reference_link',
            'weight' => 21,
          ),
          'teaser' => array(
            'label' => 'hidden',
            'module' => 'dkan_featured_topics',
            'settings' => array(),
            'type' => 'dkan_topic_formatter',
            'weight' => 5,
          ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_topic',
        'label' => 'Topics',
        'required' => 0,
        'settings' => array(
          'user_register_form' => FALSE,
        ),
        'widget' => array(
          'active' => 1,
          'module' => 'options',
          'settings' => array(
            'apply_chosen' => '',
          ),
          'type' => 'options_select',
          'weight' => 4,
        ),
      );
      field_create_instance($instance);
    }
  }
  dkan_featured_topics_default_content();
}

/**
 * Custom panel function.
 */
function panels_load_page_by_id($id) {
  if(module_exists('dkan_sitewide_panels')) {
    ctools_include('page', 'page_manager', 'plugins/tasks');
    ctools_include('page_manager.admin', 'page_manager', '');
    ctools_include('content');
    ctools_include('export');

    $tasks = page_manager_get_tasks_by_type('page');
    $page_types = array();

    foreach ($tasks as $task) {
      // Disabled page return empty
      if ($pages = page_manager_load_task_handlers($task)) {
        $page_types[] = $pages;
      }
    }

    // Not all display _object(&data, name)ts are loaded, make sure to load them
    foreach ($page_types as &$pages) {
      foreach ($pages as &$page) {
        if (empty($page->conf['display']) && !empty($page->conf['did'])) {
          $page->conf['display'] = panels_load_display($page->conf['did']);
        }
      }
    }

    // Page types will have all panel page objects fully loaded
    foreach ($page_types as $page_type) {
      foreach ($page_type as $key => $value) {
        if ($key == $id) {
          return $value;
        }
      }
    }
  }
}

function panels_display_pane_add(&$display, $region, $type_name, $subtype_name, $configuration, $style) {
  if(module_exists('dkan_sitewide_panels')) {
    $content_type = ctools_get_content_type($type_name);
    $subtype = ctools_content_get_subtype($content_type, $subtype_name);
    $pane = panels_new_pane($type_name, $subtype_name, TRUE);
    $pane->configuration = $configuration;
    $pane->style = $style;
    $display->add_pane($pane, $region);

    panels_save_display($display);
  }
}

function panels_display_pane_remove(&$display, $region, $type_name, $subtype_name) {
  if(module_exists('dkan_sitewide_panels')) {
    foreach ($display->content as $key => $pane) {
      if($pane->panel == $region && $pane->type == $type_name && $pane->subtype == $subtype_name) {
        $region_pane_key = array_search($pane->pid, $display->panels[$region]);
        unset($display->panels[$region][$region_pane_key]);
        unset($display->content[$key]);
      }
    }
    panels_save_display($display);
  }
}

/**
 * Implements hook_enable().
 */
// function dkan_featured_topics_enable() {
//   if(module_exists('dkan_sitewide_panels')) {
//     $page = panels_load_page_by_id('page_datasets_panel_context');
//     panels_display_pane_add($page->conf['display'], 'sidebar', 'block', 'facetapi-dqCRnp6cKP1cSzAsNB6zqFtY9AVEa0mp', $configuration, $style);
//   }
// }

/**
 * Implements hook_disable().
 */
function dkan_featured_topics_disable() {
  // if(module_exists('dkan_sitewide_panels')) {
  //   $page = panels_load_page_by_id('page_datasets_panel_context');
  //   panels_display_pane_remove($page->conf['display'], 'sidebar', 'block', 'facetapi-dqCRnp6cKP1cSzAsNB6zqFtY9AVEa0mp', $configuration, $style);
  // }

  if (module_exists('taxonomy_menu')) {
    db_update('menu_links')
      ->fields(array('hidden' => 1))
      ->condition('module', 'taxonomy_menu')
      ->execute();
  }
  dkan_featured_topics_add_menu();
  // Recommend uninstall.
  global $base_url;
  drupal_set_message(t('To completely remove DKAN Topics content and fields from the site, uninstall the module here: <a href="'. $base_url . '/admin/modules/uninstall">Uninstall DKAN Featured Topics</a>.'), 'warning', FALSE);
}

/**
 * Set up default content.
 */
function dkan_featured_topics_default_content() {
  module_load_include('inc', 'font_icon_select', 'font_icon_select.admin');
  $new_entity = entity_get_controller('font_icon_select_font_library')->create();
  $new_entity->font_title = 'DKAN Topics';
  $font_files = array('eot', 'svg', 'ttf', 'woff');

  // Add the file usage.
  foreach ($font_files as $ext) {
    $filename = 'dkan-topics';
    $theme_path = drupal_get_path('theme', 'nuboot_radix');
    $handle = fopen($theme_path . '/assets/fonts/' . $filename . '.' . $ext, 'r');
    $file = file_save_data($handle, 'public://' . $filename . '.' . $ext, FILE_EXISTS_RENAME);
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    $new_entity->{$ext . '_fid'} = $file->fid;
    file_usage_add($file, 'font_icon_select', 'font_icon_select_font_library', $new_entity->flid);
  }
  entity_get_controller('font_icon_select_font_library')->save($new_entity);
  _font_icon_select_generate_general_css($new_entity);

  // Check if there are already terms and if not import default terms.
  //$vocab = taxonomy_vocabulary_machine_name_load('dkan_topics');
  //$terms = taxonomy_get_tree($vocab->vid);
  //if (!isset($terms) && module_exists('taxonomy_fixtures') && module_exists('dkan_default_topics')) {
    $vocab = dkan_default_topics_taxonomy_fixtures_vocabulary();
    taxonomy_fixtures_import_terms($vocab);
  //}
}

/**
 * Implements hook_uninstall().
 */
function dkan_featured_topics_uninstall() {
  // Remove taxonomy.
  $vocab = taxonomy_vocabulary_machine_name_load('dkan_topics');
  taxonomy_vocabulary_delete($vocab->vid);

  $fields = array(
    'field_icon_type', 
    'field_topic', 
    'field_topic_icon', 
    'field_topic_icon_color',
  );
  foreach( $fields as $field) {
    if (field_info_field($field)) { 
      field_delete_field($field); 
      $message = 'Deleting field = ' . $field;
      dsm($message); 
      drush_print($message);
    };
  }
  // Purge all field infromation
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);

}
