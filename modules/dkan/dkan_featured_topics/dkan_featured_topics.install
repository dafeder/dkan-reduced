<?php

/**
 * Install file for DKAN Topics.
 */
include_once 'dkan_featured_topics.field_base.inc';
include_once 'dkan_featured_topics.field_instance.inc';

/**
 * Implements hook_install().
 */
function dkan_featured_topics_install() {
  dkan_featured_topics_add_menu();

  foreach (_dkan_featured_topics_installed_fields() as $field) {
    field_create_field($field);
  }
  foreach (_dkan_featured_topics_instances() as $fieldinstance) {
    field_create_instance($fieldinstance);
  }

  // Add the field_topic field instance to the dataset, story and dashboard bundles. 
  $content_types = array('dataset', 'dkan_data_story', 'data_dashboard');
  $available_types = array_keys(node_type_get_types());

  foreach (array_intersect($content_types, $available_types) as $content_type) {
    if (!field_info_instance('node', 'field_topic', $content_type)) {

      $instance['node-' . $content_type . '-field_topic'] = array(
        'bundle' => $content_type,
        'default_value' => NULL,
        'deleted' => 0,
        'description' => '',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'module' => 'taxonomy',
            'settings' => array(),
            'type' => 'taxonomy_term_reference_link',
            'weight' => 21,
          ),
          'search_result' => array(
            'label' => 'above',
            'module' => 'taxonomy',
            'settings' => array(),
            'type' => 'taxonomy_term_reference_link',
            'weight' => 21,
          ),
          'teaser' => array(
            'label' => 'hidden',
            'module' => 'dkan_featured_topics',
            'settings' => array(),
            'type' => 'dkan_topic_formatter',
            'weight' => 5,
          ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_topic',
        'label' => 'Topics',
        'required' => 0,
        'settings' => array(
          'user_register_form' => FALSE,
        ),
        'widget' => array(
          'active' => 1,
          'module' => 'options',
          'settings' => array(
            'apply_chosen' => '',
          ),
          'type' => 'options_select',
          'weight' => 4,
        ), 
      );
      field_create_instance($instance);
    }
  } 
}


/**
 * Implements hook_modules_enabled($modules).
 */
function dkan_featured_topics_modules_enabled($modules) {
  if (in_array('dkan_sitewide_panels', $modules)) {
    function panels_load_page_by_id($id) {
      ctools_include('page', 'page_manager', 'plugins/tasks');
      ctools_include('page_manager.admin', 'page_manager', '');
      ctools_include('content');
      ctools_include('export');

      $tasks = page_manager_get_tasks_by_type('page');
      $page_types = array();

      foreach ($tasks as $task) {
        // Disabled page return empty
        if ($pages = page_manager_load_task_handlers($task)) {
          $page_types[] = $pages;
        }
      }

      // Not all display _object(&data, name)ts are loaded, make sure to load them
      foreach ($page_types as &$pages) {
        foreach ($pages as &$page) {
          if (empty($page->conf['display']) && !empty($page->conf['did'])) {
            $page->conf['display'] = panels_load_display($page->conf['did']);
          }
        }
      }

      // Page types will have all panel page objects fully loaded
      foreach ($page_types as $page_type) {
        foreach ($page_type as $key => $value) {
          if ($key == $id) {
            return $value;
          }
        }
      }
    }

    function panels_display_pane_add(&$display, $region, $type_name, $subtype_name, $configuration, $style) {
      $content_type = ctools_get_content_type($type_name);
      $subtype = ctools_content_get_subtype($content_type, $subtype_name);
      $pane = panels_new_pane($type_name, $subtype_name, TRUE);
      $pane->configuration = $configuration;
      $pane->style = $style;
      $display->add_pane($pane, $region);

      panels_save_display($display);
    }

    function panels_display_pane_remove(&$display, $region, $type_name, $subtype_name) {
      foreach ($display->content as $key => $pane) {
        if($pane->panel == $region && $pane->type == $type_name && $pane->subtype == $subtype_name) {
          $region_pane_key = array_search($pane->pid, $display->panels[$region]);
          unset($display->panels[$region][$region_pane_key]);
          unset($display->content[$key]);
        }
      }
      panels_save_display($display);
    }

    function dkan_featured_topics_enable() {

      $page = panels_load_page_by_id('page_datasets_panel_context');
      panels_display_pane_add($page->conf['display'], 'sidebar', 'block', 'facetapi-EwrOFrHh7WdVteFiBTQYXfGlscW50MbI', $configuration, $style);
    }

    function dkan_featured_topics_disable() {

      $page = panels_load_page_by_id('page_datasets_panel_context');
      panels_display_pane_remove($page->conf['display'], 'sidebar', 'block', 'facetapi-EwrOFrHh7WdVteFiBTQYXfGlscW50MbI', $configuration, $style);
    }
  }

}
